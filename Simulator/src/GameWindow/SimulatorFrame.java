/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GameWindow;

import connectToGameWindowAndAction.ConnectToGame;
import createPlayerWindowAndAction.CreatePlayerWindow;

import createGameLobbyWindowAndAction.CreateGameLobby;
import Data.RaceTrack;
import java.awt.EventQueue;
import java.awt.Point;
import java.io.File;
import java.rmi.RemoteException;
import java.rmi.registry.Registry;
import java.rmi.server.UnicastRemoteObject;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import Data.Player;
import Data.PlayerList;
import Interfaces.Client;
import Interfaces.Connection;
import Interfaces.Server;


public class SimulatorFrame extends javax.swing.JFrame {

    private static SimulatorFrame instanceSimulatorFrame;
    public DefaultListModel chatModel = new DefaultListModel();
    private SimulatorPanel simulatorPanel = new SimulatorPanel();
   
    public CreatePlayerWindow createPlayerWindow;
    public CreateGameLobby createGameLobbyWindow;
    public ConnectToGame connectToGameWindow;
    private File inputFile;
    private RaceTrack raceTrackToPlay = null;
    public PlayerList playerDatabase = new PlayerList();
    public boolean connected = false;
    
//serverStuff
    public Player player = new Player();
    public Client ClientImpl = new ClientImpl();
    public Client clientExported;
    public Server server;
    public Registry registry;
    public Connection connection;
//gameStuff
    public int playerCount;
    public String gameName;
    public String gameCode;

        public synchronized static SimulatorFrame getInstance() {                           //Singleton
        if (instanceSimulatorFrame == null) {
            instanceSimulatorFrame = new SimulatorFrame();
         
        }
        return instanceSimulatorFrame;
    }

    private SimulatorFrame() {
        instanceSimulatorFrame = this;
        setExtendedState(MAXIMIZED_BOTH);
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane_Chat = new javax.swing.JScrollPane();
        jTextArea_chatInput = new javax.swing.JTextArea();
        jPanel_Map = simulatorPanel;
        jScrollPane1 = new javax.swing.JScrollPane();
        jList_chatWindow = new javax.swing.JList<>();
        jButton_Send = new javax.swing.JButton();
        jMenuBar = new javax.swing.JMenuBar();
        jMenu_GetStarted = new javax.swing.JMenu();
        jMenuItem_Player = new javax.swing.JMenuItem();
        jMenu_Connection = new javax.swing.JMenu();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_Game = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_Connect = new javax.swing.JMenuItem();
        jMenu_CreateMap = new javax.swing.JMenu();
        jMenuItem_CreateFrame = new javax.swing.JMenuItem();
        jMenuItem_Upload = new javax.swing.JMenuItem();
        jMenu_Exit = new javax.swing.JMenu();
        jMenuItem_ExitNow = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simulator");

        jScrollPane_Chat.setBorder(javax.swing.BorderFactory.createTitledBorder("Chat"));

        jTextArea_chatInput.setColumns(20);
        jTextArea_chatInput.setRows(5);
        jScrollPane_Chat.setViewportView(jTextArea_chatInput);

        jScrollPane1.setAutoscrolls(true);

        jList_chatWindow.setModel(chatModel);
        jScrollPane1.setViewportView(jList_chatWindow);

        javax.swing.GroupLayout jPanel_MapLayout = new javax.swing.GroupLayout(jPanel_Map);
        jPanel_Map.setLayout(jPanel_MapLayout);
        jPanel_MapLayout.setHorizontalGroup(
            jPanel_MapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_MapLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel_MapLayout.setVerticalGroup(
            jPanel_MapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_MapLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 221, Short.MAX_VALUE))
        );

        jButton_Send.setText("SEND");
        jButton_Send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SendActionPerformed(evt);
            }
        });

        jMenu_GetStarted.setText("Start");

        jMenuItem_Player.setAction(new GameWindow.CreatePlayerAction());
        jMenuItem_Player.setText("Create Player");
        jMenuItem_Player.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_PlayerActionPerformed(evt);
            }
        });
        jMenu_GetStarted.add(jMenuItem_Player);

        jMenuBar.add(jMenu_GetStarted);

        jMenu_Connection.setText("Connect");
        jMenu_Connection.add(jSeparator1);

        jMenuItem_Game.setAction(new GameWindow.CreateGameLobbyAction());
        jMenuItem_Game.setText("Create Server");
        jMenu_Connection.add(jMenuItem_Game);
        jMenu_Connection.add(jSeparator2);

        jMenuItem_Connect.setAction(new GameWindow.ConnectToGameAction());
        jMenuItem_Connect.setText("Connect");
        jMenuItem_Connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_ConnectActionPerformed(evt);
            }
        });
        jMenu_Connection.add(jMenuItem_Connect);

        jMenuBar.add(jMenu_Connection);

        jMenu_CreateMap.setText("Create Map");

        jMenuItem_CreateFrame.setAction(new GameWindow.StartEditorAction());
        jMenuItem_CreateFrame.setText("Open Editor");
        jMenuItem_CreateFrame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_CreateFrameActionPerformed(evt);
            }
        });
        jMenu_CreateMap.add(jMenuItem_CreateFrame);

        jMenuItem_Upload.setText("Open Racetrack");
        jMenuItem_Upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_UploadActionPerformed(evt);
            }
        });
        jMenu_CreateMap.add(jMenuItem_Upload);

        jMenuBar.add(jMenu_CreateMap);

        jMenu_Exit.setText("Exit");

        jMenuItem_ExitNow.setAction(new GameWindow.ExitAction());
        jMenuItem_ExitNow.setText("Close");
        jMenuItem_ExitNow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_ExitNowActionPerformed(evt);
            }
        });
        jMenu_Exit.add(jMenuItem_ExitNow);

        jMenuBar.add(jMenu_Exit);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel_Map, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane_Chat, javax.swing.GroupLayout.DEFAULT_SIZE, 828, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_Send, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel_Map, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane_Chat, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                    .addComponent(jButton_Send, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jScrollPane_Chat.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem_PlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_PlayerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem_PlayerActionPerformed

    private void jMenuItem_ExitNowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_ExitNowActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem_ExitNowActionPerformed

    private void jMenuItem_CreateFrameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_CreateFrameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem_CreateFrameActionPerformed

    private void jMenuItem_UploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_UploadActionPerformed
       // TODO add your handling code here:
          JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(new FileNameExtensionFilter("Load CSV-File", "csv"));
        int showOpenDialog = fileChooser.showOpenDialog(SimulatorFrame.getInstance());
        
        if ( showOpenDialog == JFileChooser.APPROVE_OPTION){
            File input = fileChooser.getSelectedFile();
            SimulatorFrame.getInstance().chatModel.addElement("Loaded File: " + input.getName());
            SimulatorFrame.getInstance().setInputFile(input);
            SimulatorFrame.getInstance().setCsvData(input);
        } else {
            JOptionPane.showMessageDialog(SimulatorFrame.getInstance(), "No Selection");
        }
      
    }//GEN-LAST:event_jMenuItem_UploadActionPerformed

    private void jButton_SendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SendActionPerformed
        // TODO add your handling code here:
        
        EventQueue.invokeLater(() -> {
            try {
                String mesg = writeMessage(jTextArea_chatInput.getText(), this.player.username);
                this.server.sendString(mesg);
                this.chatModel.addElement(mesg);
            } catch (RemoteException ex) {
                System.err.println(ex.getMessage());
            }

        });
    }
    
    private static String writeMessage(String origin, String username) {
              return  username + " : " + origin;
   
    }//GEN-LAST:event_jButton_SendActionPerformed

    private void jMenuItem_ConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_ConnectActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jMenuItem_ConnectActionPerformed

    public void connect(String gameName, String gameCode) throws RemoteException {
        clientExported = (Client) UnicastRemoteObject.exportObject(ClientImpl, 0);
        player.setConnectedClient(ClientImpl);
            
        server = connection.joinGame(ClientImpl, player, gameName, gameCode);
        player.setConnectedServer(server);
            
            connected = true;
            
            String mesg = player.username + " made it in " + gameName;
            server.sendString(mesg);
    }
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Send;
    private javax.swing.JList<String> jList_chatWindow;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenuItem jMenuItem_Connect;
    private javax.swing.JMenuItem jMenuItem_CreateFrame;
    private javax.swing.JMenuItem jMenuItem_ExitNow;
    private javax.swing.JMenuItem jMenuItem_Game;
    private javax.swing.JMenuItem jMenuItem_Player;
    private javax.swing.JMenuItem jMenuItem_Upload;
    private javax.swing.JMenu jMenu_Connection;
    private javax.swing.JMenu jMenu_CreateMap;
    private javax.swing.JMenu jMenu_Exit;
    private javax.swing.JMenu jMenu_GetStarted;
    private javax.swing.JPanel jPanel_Map;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane_Chat;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTextArea jTextArea_chatInput;
    // End of variables declaration//GEN-END:variables

    public RaceTrack getRaceTrackToPlay() {
        return this.raceTrackToPlay;
    }

    public void setRaceTrackToPlay(RaceTrack raceTrackToPlay) {
        this.raceTrackToPlay = raceTrackToPlay;
    }

   
    public File getInputFile() {
        return inputFile;
    }

    public void setInputFile(File newInput) {
        File oldValue = this.inputFile;
        this.inputFile = newInput;
        firePropertyChange("Input", oldValue, this.inputFile);
    }

    public void setCsvData(File input) {
        this.raceTrackToPlay = new RaceTrack(input);
        repaint();
    }
}
